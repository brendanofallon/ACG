<!--  Another example ACG input file. This one is very similar to the previous one, but instead
 	of containing the alignment, it references an external file, example2.fas, that stores
 	the sequences. It also uses the TN93 model of mutation, which includes two free
 	parameters, kappaR and kappaY, and estimates base frequencies from the data as well. 
 	
 	In addition to the usual 'StateLogger', which tracks parameter values, this file also
 	shows how you can define loggers that track the TMRCA along the length of the sequence
 	(via the rootHeightLogger, defined in the class logging.RootHeightDensity), and the 
 	positions of recombination breakpoints using the bpLocLogger in logging.BreakpointLocation. -->
<ACG>

<!-- A random number generator is essential and will be used by all classes. -->
<!-- A initial random seed can be specified with the seed="XXX" attribute -->
<RandomSource class="math.RandomSource" />

<!-- Sequence data is provided in the form of an alignment, which can refer to a file -->
<!-- or contain a list of sequences -->
<alignment class="sequence.Alignment" filename="doc/example2.fas">
</alignment>


<!--  The Ancestral Recombination Graph (ARG) that is the central feature of the analysis. 
 It's a type of Parameter, and so has a frequency specifying how often new values are 
 proposed by the MCMC machinery. It also has a list of modifiers (proposal kernels) that
 propose new values	 -->
<arg class="arg.ARG" frequency="30.0">
	<alignment />
	<modifiers class="list">
		<recombAddRemove class="modifier.RecombAddRemove"/>
		<rootHeight class="modifier.RootHeightModifier" />
		<nodeHeight class="modifier.NodeHeightModifier"/>
		<swapper class="modifier.SubtreeSwap" />
		<wideSwap class="modifier.WideSwap" />
		<shifter class="modifier.BreakpointShifter" />
		<bpSwap class="modifier.BreakpointSwapper" />
	</modifiers>
</arg>

<!----------------------  Mutation model and data likelihood   ------------------------------> 

<!-- The TN93 mutation model has one more free parameter than the F84 model  -->
<mutationModel class="dlCalculation.substitutionModels.TN93Matrix">
	<stationaries class="dlCalculation.substitutionModels.BaseFrequencies" stationaries="0.25 0.25 0.25 0.25" >
		<stationariesMod class="modifier.DirichletModifier" />
	</stationaries>
	<kappaR class="parameter.DoubleParameter" name="kappaR" value="2.0" lowerBound="0.5" upperBound="500">
		<kappaRMod class="modifier.SimpleModifier" />
	</kappaR>
	<kappaY class="parameter.DoubleParameter" name="kappaY" value="2.0" lowerBound="0.5" upperBound="500">
		<kappaYMod class="modifier.SimpleModifier" />
	</kappaY>
</mutationModel>

<!--  A likelihood component that computes the probability of observing the data conditional on the ARG
	  At minimum, it needs references to the mutation model, the ARG, and the data matrix -->
<DLCalculator class="dlCalculation.DataLikelihood"> 
	<mutationModel />
	<arg />
</DLCalculator>

<!----------------------  Coalescent model and likelihood   ------------------------------> 

<!--  Parameter specifying population size (theta / 2.0)  -->
<constantPopSize class="coalescent.ConstantPopSize" frequency="1.0" value="1.0">
	<popSizeScaler class="modifier.ScaleModifier"/>
</constantPopSize>

<!-- Simple, constant recombination rate across sites -->
<constantRecRate class="coalescent.ConstantRecombination" value="1.0">
	<recRateScaler class="modifier.ScaleModifier"/>
</constantRecRate>

<!-- Place an exponential prior on the recombination rate with a mean of 25 -->
<!-- The prior helps to confine the ARGs with a reasonable number of recombinations -->
<recPrior class="priors.ExponentialPrior" mean="25">
	<constantRecRate />
</recPrior>

<!-- A likelihood object specifying the probability of observing the ARG  -->
<coalescentLikelihood class="coalescent.CoalescentLikelihood">
	<constantPopSize />
	<constantRecRate />
	<arg />
</coalescentLikelihood>

<!---------------------- 	 Logging and output	   ------------------------------> 

<!-- A logger that tracks properties of the likelihoods and parameters in the MCMC -->
<statelogger class="logging.StateLogger" filename="example2.log" frequency="5000" echoToScreen="true" />

<!-- A logger that tracks the position of recombination breakpoints along the sequence -->
<bpLocLogger class="logging.BreakpointLocation" filename="example2_bp.txt" frequency="5000" burnin="100000">
	<arg />  
</bpLocLogger>

<!-- a logger that tracks the distribution of TMRCA (root height of marginal trees) along the sequence -->
<rootHeightLogger class="logging.RootHeightDensity" filename="example2_rootHeight.txt" frequency="5000" burnin="100000">
	<arg />
</rootHeightLogger>


<!----------------------  Markov chain   ------------------------------> 

<mc class="mcmc.MCMC" length="20000000" run="true">
	<parameters class="list">
		<constantPopSize />
		<constantRecRate />
		<stationaries />
		<kappaR />
		<kappaY />
		<arg />  
	</parameters>
	<likelihoodComponents class="list">
		<recPrior />
		<coalescentLikelihood />
		<DLCalculator />
	</likelihoodComponents>
	<loggers class="list">
		<statelogger />
		<bpLocLogger />
		<rootHeightLogger />
	</loggers>
</mc>

</ACG>