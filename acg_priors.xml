<!--  This ACG file uses an Exponential Growth model of population size change. The growth model
	uses two new parameters, the Base Size and the the Growth Rate. Otherwise, we assume a simple F84
	model of mutation with base frequencies and the Ts/Tv ratio estimated from the data, and a single
	site rate class. -->
<ACG>

<!-- A random number generator is essential and will be used by all classes. -->
<!-- A initial random seed can be specified with the seed="XXX" attribute -->
<RandomSource class="math.RandomSource" />


<!--  The Ancestral Recombination Graph (ARG) that is the central feature of the analysis -->
<arg class="arg.ARG" frequency="30.0" tips="10" theta="1.0" sites="1000">
	<modifiers class="list">
		<recombAddRemove class="modifier.RecombAddRemove"/>
		<rootHeight class="modifier.RootHeightModifier" />
		<nodeHeight class="modifier.NodeHeightModifier"/>
		<swapper class="modifier.SubtreeSwap" />
		<wideSwap class="modifier.WideSwap" />
		<shifter class="modifier.BreakpointShifter" />
		<bpSwap class="modifier.BreakpointSwapper" />
	</modifiers>
</arg>






<!-- ===========================  Mutation model and data likelihood  ========================= --> 

<!-- The TN93 mutation model has one more free parameter than the F84 model  -->
<mutationModel class="dlCalculation.substitutionModels.F84Matrix">
	<stationaries class="dlCalculation.substitutionModels.BaseFrequencies" frequency="0.1" stationaries="0.25 0.25 0.25 0.25" >
		<stationariesMod class="modifier.DirichletModifier" />
	</stationaries>
	<kappaY class="parameter.DoubleParameter" name="kappaY" frequency="0.1" value="2.0" lowerBound="0.5" upperBound="500">
		<kappaYMod class="modifier.SimpleModifier" />
	</kappaY>
</mutationModel>



<!-- ==========================   Coalescent model and likelihood  =========================== --> 

<!--  Parameter specifying population size that is growing at an exponential rate. We 
 want to estimate two parameters, the current size ("baseSize") as well as the growth 
 rate ("growthRate"). Don't forget to add these parameters to MCMC! -->
<constPopSize class="coalescent.ConstantPopSize" frequency="1.0" value="1">
	<popSizeScaler class="modifier.ScaleModifier"/>
</constPopSize>

<!-- Simple, constant recombination rate across sites -->
<constantRecRate class="coalescent.ConstantRecombination" value="0.2">
	<recRateScaler class="modifier.ScaleModifier"/>
</constantRecRate>

	
<!-- Place an exponential prior on the recombination rate with a mean of 25 -->
<!-- The prior helps to confine the ARGs with a reasonable number of recombinations -->
<recPrior class="priors.ExponentialPrior" mean="25">
	<constantRecRate />
</recPrior>

<!-- A likelihood object specifying the probability of observing the ARG  -->
<coalescentLikelihood class="coalescent.CoalescentLikelihood">
	<constPopSize />
	<constantRecRate />
	<arg />
</coalescentLikelihood>





<!-- ===========================    Logging and output    =============================  --> 

<!-- A logger that tracks properties of the likelihoods and parameters in the MCMC -->
<statelogger class="logging.StateLogger" filename="priors.log" frequency="5000" echoToScreen="true" />

<!-- a logger that tracks the distribution of TMRCA (root height of marginal trees) along the sequence -->
<rootHeightLogger class="logging.RootHeightDensity" filename="priors_rootHeight.txt" frequency="5000" burnin="100000">
	<arg />
</rootHeightLogger>




<!-- ===========================     Markov chain  ============================== --> 

<mc class="mcmc.MCMC" length="3000000" run="true">
	<parameters class="list">
		<constPopSize />
		<constantRecRate />
		<stationaries />
		<kappaY />
		<arg />  
	</parameters>
	<likelihoodComponents class="list">
		<recPrior />
		<coalescentLikelihood />
	</likelihoodComponents>
	<loggers class="list">
		<statelogger />
		<rootHeightLogger />
	</loggers>
</mc>

</ACG>